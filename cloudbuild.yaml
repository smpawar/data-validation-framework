steps:
  # Step 1: Create the 'oracle' directory
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: ['-c', 'mkdir -p oracle']
    id: make-oracle-dir

  # Step 2: Download Oracle RPMs from GCS into the new directory
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', 'gs://oracle-rpms-sachinwvproj21/*.rpm', 'oracle/']
    id: download-oracle-rpms
    waitFor: ['make-oracle-dir']

  # Step 3: Build the first Docker image
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/dvt-in-cloud-run/dvt-cloud-run-execute', '.', '-f', 'execute_dvt/Dockerfile']
    id: build-dvt-execute
    waitFor: ['download-oracle-rpms']

  # Step 4: Push the first image
  - name: gcr.io/cloud-builders/docker
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/dvt-in-cloud-run/dvt-cloud-run-execute']
    id: push-dvt-execute

  # Step 5: Build the second Docker image
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/dvt-in-cloud-run/dvt-cloud-run-partition-execute', '.', '-f', 'execute_dvt_partitions/Dockerfile']
    id: build-dvt-partition
    waitFor: ['download-oracle-rpms']

  # Step 6: Push the second image
  - name: gcr.io/cloud-builders/docker
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/dvt-in-cloud-run/dvt-cloud-run-partition-execute']
    id: push-dvt-partition
options:
  logging: CLOUD_LOGGING_ONLY
tags:
  - dvt-cloud-run
